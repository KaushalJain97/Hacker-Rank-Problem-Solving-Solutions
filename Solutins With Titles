Hackerrank Problem Solving Solutions

#Halloween Sale problem

#include<stdio.h>
int main(){
int p,d,m,s,t;
int cost,sum=0;
int count=0;
scanf("%d%d%d%d",&p,&d,&m,&s);

cost=p;
sum=p;
do{
  t=cost-d;
if(t>m){
 cost=cost-d;
  count++;
  sum=sum+cost;
}
else if((t)<=m){
  cost=m;
  count++;
  sum=sum+cost;
}
}
while(sum<=s);

printf("%d",count);

return 0;  
}
#49 out of 52 test cases solved.


#camel case problem
#include<string.h>
#include<stdio.h>
#include <stdlib.h>
int main(){
    int i,n,count=0;

char *str;
 str = (char*) malloc(n*sizeof(char));
scanf("%s", str);
n=strlen(str);
for(i=0;i<n;i++){
    if(isupper(str[i]))
    count++;
    else
    continue;

free(str);
return 0;
}




#Running Time of Algorithms



#include <stdio.h>
void insertionSort(int size, int *  ar) {
    int i,j,t,count=0;
    for(i=1;i<size;i++){
        j=i;
        while(ar[j]<ar[j-1]&&j>0){
            t=ar[j];
            ar[j]=ar[j-1];
            ar[j-1]=t;
            j--;
            count++;
        }
    }
    printf("%d",count);

}
int main(void) {
   
int size;
scanf("%d", &size);
int ar[size], i;
for(i = 0; i < size; i++) { 
   scanf("%d", &ar[i]); 
}

insertionSort(size, ar);
   
   return 0;
}














